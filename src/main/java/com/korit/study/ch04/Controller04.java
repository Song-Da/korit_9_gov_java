package com.korit.study.ch04;

public class Controller04 {
    public static void main(String[] args) {
//         2 부터 100 사이의 숫자중 4의 배수인 것만 출력
//         2 < n < 100
//         4의 배수이면 출력. 2 에서 100 사이면 반복
//        for (int i = 3; i < 100; i++) { // i 를 후증가 시킨 후 2 조건으로 돌아가서 비교하고 다시 후증가 후 2 조건으로 돌아가서 걸릴 때까지 반복함. i 가 5가 되면 끝
////        0부터 5전까지의 수를 출력하는 프로그램
//            if (i % 4 == 0) {
//                System.out.println(i);
//            }
//        }
//        i 가 99 가 될 때까지... 반복을 함.
//
//        i 가 0 시작인데 홀수 1로 시작하고 20번 반복하는데 안에서 홀수면 1 = 홀, 2 = 짝, 3 = 홀 이렇게 표기해라


        for (int i = 0; i < 20; i++) {
            int n = i + 1;
            System.out.printf("%,d = %s\n", n, n % 2 == 0 ? "짝" : "홀");

            if (n % 2 == 0) {
                System.out.println(n + " = 짝");
            } else {
                System.out.println(n + " = 홀");
            }
            if (n % 2 == 0) {
                System.out.println(n + " = 짝");
                continue;
//                계속. 다음 코드가 시작되는 게 아니라 다음 반복을 계속하는 것. 건너뛰기인 거고... 다음 반복으로 i 를 1 증가 시키고 다음 반복으로 넘어감
            }
            System.out.println(n + " = 홀");
        }


//        for (int i = 0; i < 20; i++) {
//            if (i % 2 == 0) {
//                System.out.println(i + 1 + " = 홀");
//            } else {
//                System.out.println(i + 1 + " = 짝");
//            }
//        }


//        int i = 0; // 왜 위에 변수랑 똑같은 걸 선언했을까?
//        while (i < 5) {
//            System.out.println(i);
//            i++; // 증감 시키지 않으면 i 가 계속 0으로 남기 때문에 무한 반복이 됨. 실수 많이 함.
//        }
    }
}

/**
 * 두 코드의 차이점 하나
 * i 가 안에 선언되고 밖에 선언되어 있는 차이가 있음. (괄호안팍)
 * 지역 범위를 잘 봐둬야 함. 중괄호 안에 감싸진 것과 서로 범위 차이를 잘 알아야 함.
 * 지역 변수, 전역 변수 라고 함.
 *
 * 알고리즘 스택, 큐 개념. int a = 10 + 20; 연산자
 */

/**
 * for 문은 조건이 참이어야 실행이 됨.
 * 1 초기문 int i = 0 ; 2 조건문 i < 5(반복 횟수) ; 3 후처리문 i++ ;
 * 컴퓨터에게는 세세하게 명령을 내려야 한다. 아주 디테일하게 내리지 않으면 못찾음. 인공지능이 아니기 때문에.
 * 어느 위치부터 반복을 할 건지... 일정한 행위를 똑같이 동작해야 한다. 컴퓨터는 0에서 첫 시작해서 int i = 0; 으로 초기화 함.
 *
 * i = index 이다. 목차 때 쓰는데... 순서가 있고 대체되어지는 숫자. index 를 쓰려면 무조건 순서대로 정렬이 되어있어야지만
 * 쓸 수 있다. 그러지 않으면 key 값임. index 는 정렬이 되어 있어야 함!!!
 * 순서가 있는 것, 범위 영역을 반복을 하는 것은 무조건 for 문
 * for 문은 실행 순서가 있음. 초기문은 한 번 실행되고 조건문과 후처리문이 반복됨. (1), 2, 1, 3, 2, 1, 3 (조건, 후처리문의 반복)
 *
 * 보통 선증가를 하지 않고 그냥 +1 을 시킨다.
 *
 */