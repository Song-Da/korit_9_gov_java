package com.korit.study.ch05;

public class Array01 {
    public static void main(String[] args) {

        /**
         *
         */

        int n1 = 1;
        int n2 = 2;
        int n3 = 3;

        int[] nums = { 1, 2, 3 }; // 메모리가 위치하고 있는 주소를 알려줌.
        /*
        nums 라고 하는 배열의 주소를 담는 nums 라고 하는 변수가 있는 거임.
        택배 박스에다가 집 주소를 적
        nums[0] 은 이 주소에서 0번째.[1]이라고 하면 2번 index에 위치. [2]라고 하면 3번 index
        index 번호로 주소를 찾아가는 것이다.
        nums 에서 0 번 안에 든 건 1이고 자료형 int 이기에 int n = nums[0];

        주소를 따라 들어가서 값을 찾아내는 건 참조라고 함.
        무조건 0으로 초기화 하게끔...
        {1, 2, 3} 주소를 저장한 거고...

        num3[0] = 1;
        num3[0] = 4;
        = 4
        하나를 감싸는 것. 대입처럼 보면 됨. 나중에 입력되는 게 남는 거.
        공간이 없는데 넣는 건 안 되고 애초부터 만들 때 공간을 그렇게 주든지 해야 함.
        nums3 = new int[4];
        nums3[3] = 4; (새로 만든 집)
        새로 만든 집에 예전 정보를 옮겨줘야 한다.

         */
        int[] nums2 = new int[] { 1, 2, 3 }; // 배열3이다. 3개의 짐을 넣었으니까...
//      int[] nums2 = new int[] { 1, 2, 3, 4, 5 }; 를 하면 5개의 공간이 생김. / 최초 초기화 때 사용... 나중엔 초기화를 해서 쓸 일은 없고 거의 다 공간 만들어놓고 그때그때 사용하느..........


        int[] nums3 = new int[3]; // 이렇게 공간 만들어놓고 써야 함.
        nums3[0] = 1;
        nums3[1] = 2;
        nums3[2] = 3;

        System.out.println(new int[] { 1, 2, 3 }[0]);
        // 공간이 3이고 0번 인덱스의 값을 꺼내면 1이다.
        // 중괄호는 명령을 묶는 것이다.
        //
        // 명시를 꼭 해줘야 한다.

        for (int i = 0; i < 3; i++) {
            System.out.println(nums[i]);
        } 
//        모든 자료형에 대괄호를 붙이면 배열이 됨.

        /*
        앞에 자료형(데이터 생김새), 배열 안에 묶음이 하나 들어갔다.
        배열에는 묶음이 아니면 들어가지 않는다.
        int[] nums = 10; => int[] nums = {10};
        배열은 모든 언어에서 대괄호로 표시를 함.
        a = [ 1, 2, 3, 4 ];

        배열이라는 건 칸이 생긴다는 것.
        한 칸, 두 칸, 세 칸 모두 연결되어 있다.
        4byte 크기의 컨테이너 박스를 연결해둔 거고. 첫번째 칸은 0번 index 라고 부름.
        무조건 0부터 시작해서 1씩 더해지는 거고 무조건 연결되어 있어서 빈 칸은 없다.

        왜 배열을 쓰면 반복이 가능한가?
        변수 선언이 딱 되는 순간 공간을 차지할 수 있음.
        규칙을 찾을 수가 없음. 누가 언제 입주할지 모르니까. 김준일이 꼭 1호방에 있지는 않는 것처럼
        주소의 크기 만큼은 건너뛰고 더해지는 것
        첫 주소가 100호 이면 배열에 int 라고 되어있는
        1*1 1*2 1*3 ... 주소값이 동일하게 커져가는 것
        4byte 이면 4byte 만큼 크기를 놔둠

        학생이라 관련있는 것들은 묶고 반복 연산...
        성적이라든지.
        관련있는 것들끼리 한번에 묶어서 옮길 수 있음
        반복을 위해서 배열을 씀

        배열을 선언하고 초기화 하는 방법

         */

        String[] names = new String[] { "김준일", "김준이", "김준삼" };
        for (int i = 0; i < 3; i++) {
            System.out.println("이름: " + names[i]);

//            같은 자료의 데이터들을 묶을 수 있다.

        }

        //forEach
        for (int i : new int[] {1, 2, 3, 4}) { // 파이썬과 다름... 순회한다는 뜻. 여기서 i 는 그냥 ... 변수임. for 문에 나오는 i가 아님.
            System.out.println(i);
        }
    }
}
/*
배열은 사물함, 도서관 정도로 생각하면 됨. 순서대로 정렬되는 것들...
 */